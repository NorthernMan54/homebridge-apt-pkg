name: "Pre-Release Validation Workflow"

on:
  workflow_dispatch:
  release:

jobs:
  count_prerelease_assets:
    if: ${{ github.event.release.prerelease == true }} && ${{ github.event.release.draft == false }}
    name: Download Latest Pre-Release Assets
    runs-on: ubuntu-latest
    steps:
      - name: Download prerelease assets
        id: download_assets
        uses: robinraju/release-downloader@v1.11
        with:
          releaseId: ${{ github.event.release.id }}
          preRelease: true
          fileName: 'homebridge*.deb'
      
      - name: List the downloaded files
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: List downloaded files
        run: ls -l

      - name: Check the number of downloaded files
        id: check_file_count
        run: |
          FILE_COUNT=$(ls -1 | wc -l)
          echo "Number of files downloaded: $FILE_COUNT"
          if [ "$FILE_COUNT" -ne 3 ]; then
            echo "::error::Expected 3 files, but found $FILE_COUNT"
            exit 1
          fi

  validate_prerelease_x86_package:
    needs: count_prerelease_assets
    name: Download, Install, and Validate Homebridge Package
    runs-on: ubuntu-latest
    steps:
      - name: Download release asset
        id: download_release
        uses: robinraju/release-downloader@v1.11
        with:
          latest: true
          preRelease: true
          fileName: 'homebridge_v1.3.10_amd64.deb'
      
      - name: List downloaded files
        run: |
          echo "Downloaded files:"
          ls -l

      - name: Install the downloaded package
        run: |
          sudo dpkg -i homebridge_v1.3.10_amd64.deb || sudo apt-get install -f -y
          sleep 30

      - name: Validate Homebridge Service
        run: |
          sudo hb-service view
          sudo hb-service status

  print_context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump Inputs context
        env:
          INPUTS_CONTEXT: ${{ toJson(inputs) }}
        run: echo "$INPUTS_CONTEXT"
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Show default environment variables
        run: |
          echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
          echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
          echo "The run id is: $GITHUB_RUN_ID"
          echo "The GitHub Actor's username is: $GITHUB_ACTOR"
          echo "GitHub SHA: $GITHUB_SHA"
